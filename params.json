{
  "name": "Simple-hapi-plugin-demo",
  "tagline": "",
  "body": "# simple-hapi-plugin-demo\r\n\r\n[![Build Status](https://travis-ci.org/blacksun1/simple-hapi-plugin-demo.svg?branch=master)](https://travis-ci.org/blacksun1/simple-hapi-plugin-demo)\r\n[![Coverage Status](https://coveralls.io/repos/github/blacksun1/simple-hapi-plugin-demo/badge.svg?branch=master)](https://coveralls.io/github/blacksun1/simple-hapi-plugin-demo?branch=master)\r\n\r\nJust an example. It doesn't really do anything. This is basically a starting point for a REAL Hapi Plugin. This plugin is all setup for development with:\r\n\r\n* Grunt (build, -> clean, eslint and babel)\r\n* Tests (Using lab and code, written in JavaScript)\r\n* Code for the plugin is written in babel and is in the `./lib/` folder. Gets built to `./dist/`.\r\n\r\n## Install\r\n\r\n```bash\r\n$ npm install bitcoin-server --save\r\n```\r\n\r\n## Usage\r\n\r\nJust register in your Hapi server like any other plugin.\r\n\r\n```js\r\nconst Hapi = require(\"hapi\");\r\nconst server = new Hapi.Server();\r\nserver.connection({\"port\": 8080});\r\nserver.register([require(\"simple-hapi-plugin-demo\")]);\r\nserver.start(err => {\r\n\r\n    if (err) {\r\n        throw err;\r\n    }\r\n});\r\n```\r\n\r\n## Development\r\n\r\nWhen developing, tests go into the tests folder.\r\n\r\nTo run the tests\r\n\r\n```bash\r\n# Just run the tests\r\n$ npm test\r\n# Run the tests and show a verbose report\r\n$ npm test -- -v\r\n# Run the tests and produce a coverage report\r\n$ npm run test-cover\r\n```\r\n\r\nto run a test server Hapi server while developing\r\n\r\n```bash\r\nnpm start\r\n```\r\n\r\nor\r\n\r\n```bash\r\n$ npm run nodemon\r\n```\r\n\r\nto run under nodemon and watch for any changes.\r\n\r\n## License\r\n\r\nMIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}